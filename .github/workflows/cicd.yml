name: Build

on:
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      TAG: ghcr.io/cloud-cli/node:${{ github.sha }}
      LATEST_TAG: ghcr.io/cloud-cli/node:latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build branch
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}

      - name: Build latest
        if: github.ref == 'refs/heads/${{ inputs.defaultBranch }}'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.LATEST_TAG }}

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build test image
        run: |
          echo "FROM ghcr.io/cloud-cli/node:${{ github.sha }}"  >> test/Dockerfile
          echo "ADD . /home/app" >> test/Dockerfile
          cat test/Dockerfile
          docker build -t test test/

      - name: Test if image is built correctly
        run: |
          docker run --rm -d --name test -p8080:80 test
          sleep 3

          echo "Test if index.html works"
          test=`curl -sS localhost:8080`
          [ "$test" == "it works!" ] || exit 1;

          echo "Test if index.txt works"
          test=`curl -sS localhost:8080/index.txt`
          [ "$test" == "txt works!" ] || exit 1;

          echo "Test if configuration files are not exposed"
          test=`curl -sS localhost:8080/.nginx/test.conf`
          [ "$test" == "it works!" ] || exit 1;

      - name: Clean up
        if: ${{ always() }}
        run: |
          docker stop test || true
          docker rmi test
          docker image prune -f
